<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Raspberry Pi Sandbox</title>
    <link rel="stylesheet" href="<%= static_path(@conn, "/css/app.css") %>">
  </head>

  <body id="js-theme-target" class="theme-light">
    <div class="container" style="margin-bottom: 20px;">

      <button type="button" name="toggle" id="js-toggle-control" data-toggle="theme" data-target="#theme-target" onClick="toggleTheme()"> Toggle Theme </button>

      <div class="pinout-board">
        <div class="pin disabled" data-pin-type="3v" data-pin-direction="" data-pin-status="">
          <div class="pin__marker"> </div>
          <div class="pin__status-indicator"> </div>
          <div class="pin__label">
            <span class="pin__label-item pin__label-item--title"> 3.3v </span>
            <span class="pin__label-item pin__label-item--outline"> DC Power </span>
            <span class="pin__label-item"> 1 </span>
          </div>
          <ul class="pin__menu invisible">
            <li class="pin__menu-item"> Set as input </li>
            <li class="pin__menu-item"> Set as output </li>
          </ul>
        </div>

        <div class="pin" disabled data-pin-type="5v" data-pin-direction="input" data-pin-status="low">
          <div class="pin__marker"> </div>
          <div class="pin__status-indicator"> </div>
          <div class="pin__label">
            <span class="pin__label-item pin__label-item--title"> 5v </span>
            <span class="pin__label-item pin__label-item--outline"> DC Power </span>
            <span class="pin__label-item"> 2 </span>
          </div>
          <ul class="pin__menu invisible">
            <li class="pin__menu-item"> Set as input </li>
            <li class="pin__menu-item"> Set as output </li>
          </ul>
        </div>

        <div class="pin" data-pin-type="i2c" data-pin-direction="input" data-pin-status="high">
          <div class="pin__marker"> </div>
          <div class="pin__status-indicator"> </div>
          <div class="pin__label">
            <span class="pin__label-item pin__label-item--title"> GPIO02 </span>
            <span class="pin__label-item pin__label-item--outline"> SDA1 </span>
            <span class="pin__label-item pin__label-item--outline"> I<sup>2</sup>C </span>
            <span class="pin__label-item"> 3 </span>
          </div>
          <ul class="pin__menu invisible">
            <li class="pin__menu-item"> Set as input </li>
            <li class="pin__menu-item"> Set as output </li>
          </ul>
        </div>

        <div class="pin" data-pin-type="5v" data-pin-direction="output" data-pin-status="low">
          <div class="pin__marker"> </div>
          <div class="pin__status-indicator"> </div>
          <div class="pin__label">
            <span class="pin__label-item pin__label-item--title"> 5v </span>
            <span class="pin__label-item pin__label-item--outline"> DC Power </span>
            <span class="pin__label-item"> 4 </span>
          </div>
          <ul class="pin__menu invisible">
            <li class="pin__menu-item"> Set as input </li>
            <li class="pin__menu-item"> Set as output </li>
          </ul>
        </div>
      </div>
    </div>


    <%= render @view_module, @view_template, assigns %>
      <script src="<%= static_path(@conn, "/js/app.js") %>"></script>
  </body>

  <script type="text/javascript">
    document.onclick = check;

    function check(e) {
      var pins = document.querySelectorAll('div.pin');
      var menus = document.querySelectorAll('ul.pin__menu');
      var target = (e && e.target) || (event && event.srcElement);

      for (i = 0; i < pins.length; ++i) {
        var pin = pins[i];
        var menu = menus[i];

        if (!checkParent(target, menu)) {
          // click NOT on the menu
          if (checkParent(target, pin)) {
            // click on the link
            if (menu.classList.contains("invisible")) {
              menu.classList.remove("invisible");
              pin.classList.add("selected");
            } else {
              menu.classList.add("invisible");
              pin.classList.remove("selected");
            }
          } else {
            // click both outside link and outside menu, hide menu
            menu.classList.add("invisible");
            pin.classList.remove("selected");
          }
        }
      }
    }

    function checkParent(t, elm) {
      while(t.parentNode) {
        if( t == elm ) {return true;}
        t = t.parentNode;
      }
      return false;
    }

    function toggleTheme() {
      console.log("toggle theme");
      var themeTarget = document.getElementById("js-theme-target");

      if(themeTarget.classList.contains("theme-light")) {
        themeTarget.classList.remove('theme-light');
        themeTarget.classList.add("theme-dark");
      } else {
        themeTarget.classList.remove("theme-dark");
        themeTarget.classList.add("theme-light");
      }
    }
  </script>
</html>
